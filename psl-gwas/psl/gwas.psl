// If a sample contains a kmer, and the sample is resistant to a certain class,
// then the kmer is associated with resistance to that class.
0.1: Contains(s, k) & SamplePheno(s, c) >> UnitigPheno(k, c) ^2

// If a sample contains a kmer, and the sample is not resistant to a certain
// class, then the kmer is not associated with resistance to that class
100.0: Contains(s, k) & !SamplePheno(s, c) >> !UnitigPheno(k, c) ^2

// negative prior
2.0: !UnitigPheno(k, c) ^2

// If two antibiotics are similar, and a kmer is resistant to one antibiotic,
// it is likely resistant to the other antibiotic
1.0: SimilarPheno(c1, c2) & UnitigPheno(k, c1) >> UnitigPheno(k, c2) ^2


// If two samples are similar, and the resistant one contains a kmer and the
// vulnerable one does not, there is evidence the kmer causes resistance
1.0: SimilarSample(s1, s2) & SamplePheno(s1, c) & !SamplPheno(s2, c) & Contains(s1, k) & !Contains(s2, k) >> UnitigPheno(k, c) ^2


//-------------------------------- Potential ---------------------------------
//
// potential but ignores s1
// 1.0: SimilarSample(s1, s2) & KmerResistance(k, c) & !SampleResistance(s2, c) & !Contains(s2, k) >> KmerResistance(k, c) ^2
//
//
// If two kmers are SNPs of each other (hamming distance between them is 1)
// and one occurs in a resistant sample and the other occurs in a non-resistant
// sample, the first causes resistance and the second causes vulnerability
// SNP(k1, k2) & Contains(s1, k1) & SampleResistance(s1, c) & Contains(s2, k2) & !SampleResistance(s2, c) >> KmerResistance(s1, c)
// SNP(k1, k2) & Contains(s1, k1) & SampleResistance(s1, c) & Contains(s2, k2) & !SampleResistance(s2, c) >> !KmerResistance(s2, c)
//
// substituting rules 1 and 2 into the previous potential rules
// SNP(k1, k2) & !KmerResistance(k1, c) & KmerResistance(k2, c) >> KmerResistance(k2, c)
// SNP(k1, k2) & !KmerResistance(k1, c) & KmerResistance(k2, c) >> !KmerResistance(k1, c)
//
// ***combine similar sample with similar kmer (SNP)
// SimilarSample(s1, s2) & Contains(s1, k1) & Contains(s2, k2) & SNP(k1, k2) & SampleResistance(s1, c) & !SampleResistance(s2, c) >> KmerResistance(k1, c)
// SimilarSample(s1, s2) & Contains(s1, k1) & Contains(s2, k2) & SNP(k1, k2) & SampleResistance(s1, c) & !SampleResistance(s2, c) >> !KmerResistance(k2, c)
//
//-------------------------------- Brainstorm --------------------------------

// potential kmer similarity rule. i think only makes sense for SNPs/indels
//if the hamming distance between two kmers is 1, and the first kmer occurs in a
//resistant sample, and the second kmer occurs in a vulnerable sample, there is evidence that
//the first kmer confers resistance and the second one does not.
//
//*if the hamming distance between two kmers is 1, and the first kmer occurs in a 
//resistant sample and the second kmer occurs in a non resistant sample, and the
//two samples are closely related, there is stronger evidence that the first
//kmer confers resistance and the second kmer oes not.
//
//if the hamming distance between two kmers is 1, and the first kmer is associated with resistance,
//and the second kmer occurs in a non resistant genome, there is strong evidence that
//the second kmer is not associated with resistnace
//
//if the hamming distance between two kmers is 1, and the first kmer is not associated
//with resistance, and the second kmer occurs in a resistance genome, there is evidence that 
//the secdn kmer confers resistance
//
//*if there are two adjacent kmers and there is a sample that contains one and not the
//other, and that sample is resistant, that kmer confers resistance
//
//if there are two adjacent kmers and there is a sample that contains both,
//and one is associated with resistance, the other is associated with resistance

//SNP(k1, k2) & Contains(s1, k1) & SampleResistance(s1, c) & Contains(s2, k2) & !SampleResistance(s2, c) >> KmerResistance(s1, c)
//SNP(k1, k2) & Contains(s1, k1) & SampleResistance(s1, c) & Contains(s2, k2) & !SampleResistance(s2, c) >> !KmerResistance(s2, c)
// the following 2 are rewordings of the prior 2
//SNP(k1, k2) & !KmerResistance(k1, c) & Contains(s, k2) & SampleResistance(s, c) >> KmerResistance(k2, c)
//SNP(k1, k2) & KmerResistance(k1, c) & Contains(s, k2) & !SampleResistance(s, c) >> !KmerResistance(k2, c)
// the following are rewordings of the prior 2
//SNP(k1, k2) & !KmerResistance(k1, c) & KmerResistance(k2, c) >> KmerResistance(k2, c)
//SNP(k1, k2) & !KmerResistance(k1, c) & KmerResistance(k2, c) >> !KmerResistance(k1, c)

//adjacent can be shift of or substring when using unitigs that can have var lengths.
// also useful for finding snps but not genes
//Adjacent(k1, k2) & Contains(s, k1) & !Contains(s, k2) & SampleResistance(s, c) >> KmerResistance(k1, c)


// This is a method of solving the problem of clonal population structure,
// the single biggest challenge in microbial gwas.
// If two samples are similar, they are likely related, via either ancestry,
// HGT, or both. Let us denote `population` as the cluster of similar samples
// that are tightly related in this way. If many members of a population contain
// a kmer that connotes resistance, they also contain many kmers that do not
// connote resistance. However, since these kmers occur in samples that are
// resistant, they have a high probability of being false positives.
// It follows that the strongest indicator that a kmer connotes resistance is
// if it is present in two resistant samples that are weakly related. Thus:
// If two samples are not similar, and both are resistant, and both contain a
// certain kmer, that kmer likely connotes resistance.
